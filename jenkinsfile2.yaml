kind: "BuildConfig"
apiVersion: "v1"
metadata:
  name: "nodejs-sample-pipeline"
spec:
  strategy:
    jenkinsPipelineStrategy:
      jenkinsfile: |-
        // path of the template to use
        def templatePath = 'nodejs-postgresql-example'
        // name of the template that will be created
        def templateName = 'nodejs-postgresql-example'
        // NOTE, the "pipeline" directive/closure from the declarative pipeline syntax needs to include, or be nested outside,
        // and "openshift" directive/closure from the OpenShift Client Plugin for Jenkins.  Otherwise, the declarative pipeline engine
        // will not be fully engaged.
        pipeline {
            agent {
              node {
                // spin up a node.js slave pod to run this build on
                label 'nodejs'
              }
            }
            options {
                // set a timeout of 20 minutes for this pipeline
                timeout(time: 20, unit: 'MINUTES')
            }

            stages {
               stage('Run Container') {
                     steps{
        
                        sh '''
                          oc new-app https://github.com/mguazzardo/apiflask --name flaskapi
                          oc expose svc flaskapi
                          '''
                          }
                    } //stage
            } // stages
        } // pipeline
      type: JenkinsPipeline
